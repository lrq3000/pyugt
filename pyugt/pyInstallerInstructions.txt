Instructions to build a standalone exe using pyInstaller:

1. Install Anaconda or Miniconda
2. Launch the Anaconda/Miniconda command prompt
3. conda create -n pyugtenv python=3.10
Note: you can change the python version when a newer interpreter will be released. Creating a new venv is necessary to limit the number of packages in the environment, so that pyinstaller does not include a whole lot of unnecessary packages.
4. conda activate pyugtenv
5. pip install --upgrade pyugt
Note: pyugt needs to be up-to-date on pypi, otherwise replace this command by `python setup.py pyugt` to use the local version.
6. pip install --upgrade pyinstaller

From this step on, you can reuse the same environment each time you want to rebuild the freezed binary:
7. cd to the folder pyugt
8. conda activate pyugtenv
9. if there is any dist or build or __pycache folder, delete them
10. pyinstaller -F -c --hidden-import="pkg_resources.py2_warn" --add-data="_version.py;pyugt" pyugt.py
11. Copy config.ini and config_internal.ini in the dist folder
12. Zip it and distribute

To build a 32-bit binary, simply install Miniconda3 32-bit.

If when launching the executables you get the exception `ModuleNotFoundError: No module named 'pkg_resources.py2_warn'` then you need setuptools < 45.0.0

pip install --upgrade 'setuptools<45.0.0'

or add `--hidden-import="pkg_resources.py2_warn"` in the call to pyinstaller.

See: https://github.com/pypa/setuptools/issues/1963
